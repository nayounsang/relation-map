name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    permissions:
      contents: write

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "npm"
      
      - name: Config identity
        run: |
          git config --global user.email "${{ secrets.ADMIN_EMAIL }}"
          git config --global user.name "${{ secrets.ADMIN_NAME }}"
      
      - name: Generate 'release' branch
        run: |
          git checkout -b release

      - name: Check if 'release' branch exists
        id: check_branch
        run: |
          BRANCH_NAME="release"
          REPO_OWNER=$(echo "${{ github.repository }}" | cut -d'/' -f1)
          REPO_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f2)
          BRANCH_EXISTS=$(curl -s -o /dev/null -w "%{http_code}" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/branches/$BRANCH_NAME)

          if [ "$BRANCH_EXISTS" -eq 200 ]; then
            echo "Branch $BRANCH_NAME exists."
            echo "BRANCH_EXISTS=true" >> $GITHUB_ENV
          else
            echo "Branch $BRANCH_NAME does not exist."
            echo "BRANCH_EXISTS=false" >> $GITHUB_ENV
          fi
      
      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

      - name: Pull 'release' branch
        if: env.BRANCH_EXISTS == 'true'
        run: |
          if [ -z "$(git status --porcelain)" ]; then
            echo "Working tree is clean. Skipping git add and commit."
          else
            git add .
            git commit -m "fix: clean working tree"
          fi
          git pull origin release --no-rebase --allow-unrelated-histories

      # update version
      - name: Bump version and create new tag
        id: bump_version
        run: |
          npm version patch -m "chore(release): bump version to %s"
          echo "new_version=$(node -p -e "require('./package.json').version")" >> $GITHUB_ENV
          git push origin release

      - name: Create .npmrc file
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} 
        run: npm publish